[tool.poetry]
name = "quantitativetrading"
version = "0.1.0"
description = "Quantitative trading Implement a portfolio management system and create investment models"
authors = ["weslei silva bonfim <www.weslei@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
yfinance = "^0.2.20"
psycopg2-binary = "^2.9.6"
fontawesomefree = "^6.4.0"
django-admin-rangefilter = "^0.10.0"
investpy = "^1.0.8"
gunicorn = "^20.1.0"
django-debug-toolbar = "^4.1.0"
django-extensions = "^3.2.3"
html5lib = "^1.1"
bs4 = "^0.0.1"
sqlalchemy = "^2.0.15"
openpyxl = "^3.1.2"
crispy-bootstrap5 = "^0.7"
whitenoise = "^6.4.0"
django-compressor = "3.1"
beautifulsoup4 = "^4.12.2"
django-sass-processor = "^1.2.2"
django-sass-compiler = "^1.1.0"
django-libsass = "^0.9"
sgs = "^2.1.1"
selenium = "^4.10.0"
django = "^4.2.2"
pre-commit = "^3.3.3"
seaborn = "^0.12.2"
mplfinance = "^0.12.9b7"
ta = "^0.10.2"
pyettj = "^0.3.0"
pandas = "1.5.3"
django-stubs-ext = "^4.2.2"
python-decouple = "^3.8"


[tool.poetry.group.dev.dependencies]
black = { extras = ["jupyter"], version = "^22.3.0" }
djlint = "^1.30.2"
ipython = "8.0.0"
pip = "^23.1.2"
ipykernel = "^6.23.1"
install = "^1.3.5"
werkzeug = "^2.3.6"
notebook = "^6.5.4"
jupyter-contrib-nbextensions = "^0.7.0"
python-language-server = "^0.36.2"
jupyterthemes = "^0.20.0"
autopep8 = "^2.0.2"
pylint = "^2.17.4"
isort = "^5.12.0"
yapf = "^0.33.0"
pytest = "^7.3.1"
pytest-django = "^4.5.2"
pyopenssl = "^23.2.0"
pre-commit = "^3.3.2"
pylint-django = "^2.5.3"
waitress = "^2.1.2"
pynvim = "^0.4.3"
pgcli = "^3.5.0"
ptpython = "^3.0.23"
bpython = "^0.24"
debugpy = "^1.6.7.post1"
django-stubs = "^4.2.3"
django-stubs-ext = "^4.2.2"
mypy = "^1.5.1"
types-requests = "^2.31.0.2"
types-six = "^1.16.21.9"
ruff = "^0.0.286"


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# pytest.toml
# https://docs.pytest.org/en/6.2.x/customize.html?highlight=pyproject#pyproject-toml
[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "quantitativeTrading.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
minversion = "7.1.2"
addopts = "-ra -q"
testpaths = ["."]
filterwarnings = "ignore"

# isort.toml
# https://github.com/PyCQA/isort
[tool.isort]
profile = "black"
line_length = 120

# flake8.toml
# https://flake8.pycqa.org/en/latest/user/configuration.html
[tool.flake8]
ignore = "501"
max-line-length = 120
max-complexity = 10
target_version = ['py310']
exclude = '''
(
    /(
    \.eggs          # exclude a few common directories in the
    | \.git           # root of the project
    | \.pytest_cache
    | \.mypy_cache
    | \.venv
    | venv
    | _build
    | build
    | dist
    | pynguin.egg-info
    )/
)
'''
[tool.pyright]
venvPath = "."
venv = ".venv"

[tool.pylint]
init-hook = 'import sys; sys.path.append(".")'
ignore = "templates, static"
django-settings-module = "quantitativeTrading.settings"
load-plugins = "pylint_django"
suggestion-mode = "yes"

[tool.pylint.messages_control]
max-line-length = 120
disable = [
  "missing-docstring",
  "line-too-long",
  "invalid-name",
  "too-many-lines",
  "non-ascii-name",
  "ungrouped-imports",
  "wrong-import-position",
  "wrong-import-order",
  "expression-not-assigned",
]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.DESIGN]
max-parents = 13
output-format = "colorized"

[tool.pylint.TYPECHECK]
generated-members = "pandas.*" #REQUEST,acl_users,aq_parent,

[tool.black]
line-length = 120
target_version = ['py310']

[tool.djlint]
profile = "django"
ignore = "H006,H031"

[tool.pyright.MASTER]
venvPath = "."
venv = ".venv"
strict = true

[tool.ruff]
line-length = 120
